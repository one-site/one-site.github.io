import{b as u,m as r,f as m,p as g,s as M,a as O,g as q}from"./vendor.060c2f12.js";const w=function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const t of document.querySelectorAll('link[rel="modulepreload"]'))d(t);new MutationObserver(t=>{for(const s of t)if(s.type==="childList")for(const l of s.addedNodes)l.tagName==="LINK"&&l.rel==="modulepreload"&&d(l)}).observe(document,{childList:!0,subtree:!0});function a(t){const s={};return t.integrity&&(s.integrity=t.integrity),t.referrerpolicy&&(s.referrerPolicy=t.referrerpolicy),t.crossorigin==="use-credentials"?s.credentials="include":t.crossorigin==="anonymous"?s.credentials="omit":s.credentials="same-origin",s}function d(t){if(t.ep)return;t.ep=!0;const s=a(t);fetch(t.href,s)}};w();const L=()=>{let o=u({height:"100%",width:"100%"}).class,e=u({display:"grid","grid-template-columns":"1fr 1fr 1fr 1fr","overflow-y":"auto",height:"100%"}).class,a=u({"margin-left":"0.25em"}),d=u({"margin-left":"0.5em"});u({"grid-column":"1 / -1","background-color":"lightgrey"}),document.body.classList.add(o);let t=1;return{view:({attrs:{nestedData:s}})=>r(`div.${e}`,Object.keys(s).map((l,k)=>{let $=u({"background-color":"lightgrey","grid-area":`${t}/1/${t+1}/-1`,position:"sticky",top:0,left:0});t++;let v=Object.keys(s[l]).flatMap(b=>s[l][b].map((f,j)=>{let p=u({"font-size":"0.85em","grid-row":`${t}/${t+1}`});return t++,[!(j>0)&&r(`div.${p}`,{style:"grid-column:1/2"},r(`span.${d}`,m(f.date,"EEE, do"))),r(`div.${p}`,{style:"grid-column:2/3"},f.series),r(`div.${p}`,{style:"grid-column:3/5"},f.track)]}));return[r(`div.${$}`,r(`span.${a}`,m(g(l),"MMMM YYY")))].concat(v)}))}};function y(o,e){if(!e.length)return o;var a=e[0],d=e.slice(1);return O(q(o,a),function(t){return y(t,d)})}let c=[],n={background:!0},i="https://one-site.github.io",h={};Promise.all([r.request(`${i}/data/ertm.json`,n),r.request(`${i}/data/mrs.json`,n),r.request(`${i}/data/mvshofs.json`,n),r.request(`${i}/data/nwmt.json`,n),r.request(`${i}/data/nyirp.json`,n),r.request(`${i}/data/opnm.json`,n).then(o=>o.map(e=>Object.assign(e,{series:"OPNM"}))),r.request(`${i}/data/roc.json`,n).then(o=>o.map(e=>Object.assign(e,{series:"ROC"}))),r.request(`${i}/data/smart.json`,n),r.request(`${i}/data/ttom.json`,n).then(o=>o.map(e=>Object.assign(e,{series:"TTOM"})))]).then(o=>{c=o.flatMap(e=>e),c.reduce((e,a,d)=>(a.date=g(a.date),a.id=d,e),c),c=c.sort((e,a)=>e.date-a.date),h=y(c.map(e=>(e.m=m(M(e.date),"yyyy-MM-dd"),e.dt=m(e.date,"dd-MMM-yyyy"),e)),["m","dt"]),r.redraw()});r.mount(document.body,{view:()=>r(L,{nestedData:h})});
